services:
  mongodb:
    image: mongo:7.0
    container_name: system-architect-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: system_architect_generator
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - backend-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: system-architect-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # MongoDB Configuration
      MONGODB_URL: mongodb://admin:admin123@mongodb:27017/system_architect_generator?authSource=admin
      MONGODB_DB_NAME: system_architect_generator
      MONGODB_USERNAME: admin
      MONGODB_PASSWORD: admin123
      MONGODB_MIN_POOL_SIZE: 10
      MONGODB_MAX_POOL_SIZE: 100
      MONGODB_CONNECT_TIMEOUT_MS: 5000
      MONGODB_SERVER_SELECTION_TIMEOUT_MS: 5000
      MONGODB_SOCKET_TIMEOUT_MS: 10000
      MONGODB_RETRY_WRITES: "true"
      MONGODB_RETRY_READS: "true"
      
      # Google Gemini API Key (from .env or override here)
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      DEFAULT_MODEL: ${DEFAULT_MODEL:-gemini-2.5-flash}
      
      # Application Configuration
      PYTHONUNBUFFERED: 1
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - backend-network
    volumes:
      - ./app:/app/app
      - ./docs:/app/docs
      - ./scripts:/app/scripts
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

networks:
  backend-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
